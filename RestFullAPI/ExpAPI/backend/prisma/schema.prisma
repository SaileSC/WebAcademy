// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

model Usuario {
  id        String   @id @default(uuid()) @db.Char(36)
  nome      String   @db.VarChar(100)
  senha     String   @db.Char(60)
  email     String   @unique @db.VarChar(100)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  tipoUsuario   TipoUsuario @relation(fields: [tipoUsuarioid], references: [id])
  tipoUsuarioid String      @db.Char(36)

  Compras Compra[]
  @@map("usuarios")
}

model TipoUsuario {
  id     String @id @default(uuid()) @db.Char(36)
  rotulo String @db.Char(8)

  usuario Usuario[]

  @@map("tipos_usuarios")
}

model Produto {
  id        String   @id @default(uuid()) @db.Char(36)
  nome      String   @unique @db.VarChar(100)
  preco     Decimal  @db.Decimal(10, 2)
  estoque   Int      @db.Int()
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  produtoCompra ProdutoCompra[]

  @@map("produtos")
}

model Compra {
  id        String     @id @default(uuid()) @db.Char(36)
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")

  usuario Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId String @db.Char(36)

  produtosComprados ProdutoCompra[]

   @@map("compras")
}

model ProdutoCompra {
  id        String     @id @default(uuid()) @db.Char(36)
  quantidade Int @db.Int
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")

  compra Compra @relation(fields: [compraId], references: [id])
  compraId String @db.Char(36)
  
  produto Produto @relation(fields: [produtoId], references: [id])
  produtoId String @db.Char(36)

@@map("produto_compra")
}


datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
